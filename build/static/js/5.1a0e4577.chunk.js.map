{"version":3,"sources":["components/Order/PaymentInput.module.css","pages/PayPage.module.css","components/Order/PaymentInput.js","pages/PayPage.js","components/Ticket/Ticket.js","components/Ticket/Ticket.module.css"],"names":["module","exports","paymentcontainer","paymentheader","paycontent","paygroup","paygroupsmall","paygroupsmallitem","iteminput","paybtn","validateEmail","input","String","toLowerCase","match","validateName","trim","length","validateCardnumer","validateMonth","validateYear","validateCVV","PaymentInput","props","navigate","useNavigate","movieName","useSelector","state","order","selectedSeats","orderedTickets","adTicket","conTicket","totalPrice","uid","auth","sessionId","time","date","formIsValid","loading","dispatch","useDispatch","_useHttp","useHttp","submitOrder","sendRequest","status","data","_useInput","error","useInput","inputEmail","value","emailIsValid","isValid","inputEmailHasErr","inputHasError","inputEmailOnChangeHandler","inputOnchangeHandler","inputEmailBlurHandler","inputBlurHandler","_useInput2","inputResetHandler","inputName","nameIsValid","inputNameHasErr","inputNameOnChangeHandler","inputNameBlurHandler","_useInput3","inputCardNo","cardNoIsValid","inputCardNoHasErr","inputCardNoOnChangeHandler","inputCardNoBlurHandler","_useInput4","inputMonth","monthIsValid","inputMonthHasErr","inputMonthOnChangeHandler","inputMonthBlurHandler","_useInput5","inputYear","yearIsValid","inputYearHasErr","inputYearOnChangeHandler","inputYearBlurHandler","_useInput6","inputCVV","cVVIsValid","CVVHasErr","inputCVVOnChangeHandler","inputCVVBlurHandler","paySumbitHandler","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","orderData","wrap","_context","prev","next","preventDefault","abrupt","console","log","name","stop","_x","apply","this","arguments","orderActions","setOrderId","orderId","concat","react_default","a","createElement","className","classes","onSubmit","htmlFor","type","id","onChange","onBlur","maxLength","size","placeholder","LoadingSpinner","PayPage","location","useLocation","queryParams","URLSearchParams","search","movieIndex","get","uiActions","startpayStage","payPage","getMovieDetail","useEffect","message","react","SessionDetail","movieId","img","Order_PaymentInput","TicketOrder","paymentPage","adprice","conprice","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_Ticket_module_css__WEBPACK_IMPORTED_MODULE_3__","_Ticket_module_css__WEBPACK_IMPORTED_MODULE_3___default","react_barcode__WEBPACK_IMPORTED_MODULE_4__","react_barcode__WEBPACK_IMPORTED_MODULE_4___default","Ticket","tickets","items","map","ticket","index","row","seatNum","days","split","day","key","ticketrow","ticketsmall","tickettag","ticketvalue","background","height","width","displayValue","tickettitle"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,iBAAA,uCAAAC,cAAA,oCAAAC,WAAA,iCAAAC,SAAA,+BAAAC,cAAA,oCAAAC,kBAAA,wCAAAC,UAAA,gCAAAC,OAAA,mDCAlBT,EAAAC,QAAA,CAAkBC,iBAAA,k9MCSlB,IAAMQ,EAAgB,SAACC,GACnB,OAAOC,OAAOD,GACbE,cACAC,MACC,0JAICC,EAAe,SAACJ,GACnB,OAAOA,EAAMK,OAAOC,OAAQ,GAG1BC,EAAoB,SAACP,GACvB,OAAOC,OAAOD,GACbG,MAAM,kCAGLK,EAAgB,SAACR,GACnB,OAAOC,OAAOD,GACbG,MAAM,iBAGLM,EAAe,SAACT,GAClB,OAAOC,OAAOD,GACbG,MAAM,iBAGLO,EAAc,SAACV,GACjB,OAAOC,OAAOD,GACbG,MAAM,sBAuMIQ,EAnMM,SAACC,GAClB,IAAMC,EAAWC,cACXC,EAAYC,YAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,YAC/CI,EAAgBH,YAAY,SAACC,GAAD,OAAWA,EAAMC,MAAME,iBACnDC,EAAWL,YAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMG,WAC9CC,EAAYN,YAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMI,YAC/CC,EAAaP,YAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMK,aAChDC,EAAMR,YAAa,SAAAC,GAAK,OAAIA,EAAMQ,KAAKD,MACrCE,EAAwBd,EAAxBc,UAAUC,EAAcf,EAAde,KAAMC,EAAQhB,EAARgB,KACpBC,GAAc,EACdC,GAAU,EACRC,EAAWC,cAXUC,EAaiBC,YAAQC,KAAY,GAAxDC,EAbmBH,EAanBG,YAAYC,EAbOJ,EAaPI,OAAQC,EAbDL,EAaCK,KAbDC,GAAAN,EAaOO,MAS9BC,YAAS1C,IANF2C,EAhBgBH,EAgBvBI,MACUC,EAjBaL,EAiBvBM,QACeC,EAlBQP,EAkBvBQ,cACsBC,EAnBCT,EAmBvBU,qBACkBC,EApBKX,EAoBvBY,iBApBuBC,GAAAb,EAqBvBc,kBAUAZ,YAAUrC,IANHkD,EAzBgBF,EAyBvBT,MACUY,EA1BaH,EA0BvBP,QACeW,EA3BQJ,EA2BvBL,cACsBU,EA5BCL,EA4BvBH,qBACkBS,EA7BKN,EA6BvBD,iBA7BuBQ,GAAAP,EA8BvBC,kBAUAZ,YAASlC,IANFqD,EAlCgBD,EAkCvBhB,MACUkB,EAnCaF,EAmCvBd,QACeiB,EApCQH,EAoCvBZ,cACsBgB,EArCCJ,EAqCvBV,qBACkBe,EAtCKL,EAsCvBR,iBAtCuBc,GAAAN,EAuCvBN,kBAUAZ,YAASjC,IANF0D,GA3CgBD,EA2CvBtB,MACUwB,GA5CaF,EA4CvBpB,QACeuB,GA7CQH,EA6CvBlB,cACsBsB,GA9CCJ,EA8CvBhB,qBACkBqB,GA/CKL,EA+CvBd,iBA/CuBoB,IAAAN,EAgDvBZ,kBAUAZ,YAAShC,IANF+D,GApDgBD,GAoDvB5B,MACU8B,GArDaF,GAqDvB1B,QACe6B,GAtDQH,GAsDvBxB,cACsB4B,GAvDCJ,GAuDvBtB,qBACkB2B,GAxDKL,GAwDvBpB,iBAxDuB0B,IAAAN,GAyDvBlB,kBAUAZ,YAAS/B,IANFoE,GA7DgBD,GA6DvBlC,MACUoC,GA9DaF,GA8DvBhC,QACemC,GA/DQH,GA+DvB9B,cACsBkC,GAhECJ,GAgEvB5B,qBACkBiC,GAjEKL,GAiEvB1B,iBAjEuB0B,GAkEvBxB,kBAIAT,GAAgBW,GAAeM,GAAiBM,IAAgBM,IAAeM,KAC/ElD,GAAc,GAGlB,IAAMsD,GAAgB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,IAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACrBL,EAAMM,iBACFnE,EAFiB,CAAAgE,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAMrBC,QAAQC,IAAIpF,GACN4E,EAAY,CACdS,KAAM9C,EACN5B,UAAWA,EACXX,UAAWA,EACXY,KAAMA,EACNC,KAAMA,EACNT,cAAeA,EACfE,SAAUA,EACVC,UAAWA,EACXC,WAAWA,GAEZC,EACCY,EAAYuD,EAAUnE,GAEtBY,EAAYuD,GArBK,wBAAAE,EAAAQ,SAAAZ,MAAH,gBAAAa,GAAA,OAAAlB,EAAAmB,MAAAC,KAAAC,YAAA,GA2CtB,MAhBa,WAAVpE,IACDP,GAAS,GAIG,aAAVO,GAAyBC,EAAK8D,OAE9BrE,EAAS2E,IAAaC,WAAW,CAACC,QAAUtE,EAAK8D,QAEjDvF,EAAQ,WAAAgG,OAAYvE,EAAK8D,OAEzBtE,GAAU,GAMVgF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ3H,iBAAkB4H,SAAUhC,IAChD2B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ1H,eAAxB,YACDsH,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAQzH,YACpBqH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxH,UACpBoH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,SAAf,cACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,QAAQC,GAAG,QACf3E,MAAOD,EACP6E,SAAUvE,EACVwE,OAAQtE,IAEfJ,GAAoBgE,EAAAC,EAAAC,cAAA,yCAEzBF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxH,UACpBoH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,QAAf,gBACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOC,GAAG,OACd3E,MAAOW,EACPiE,SAAU9D,EACV+D,OAAQ9D,IAEdF,GAAmBsD,EAAAC,EAAAC,cAAA,wCAEzBF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQxH,UACpBoH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,cAAf,eACAN,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOC,GAAG,aACd3E,MAAOiB,EACP2D,SAAUxD,EACVyD,OAAQxD,IAEfF,GAAqBgD,EAAAC,EAAAC,cAAA,qCAE1BF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQvH,eACpBmH,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQtH,mBACpBkH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,UAAf,SACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQrH,WACpBiH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOC,GAAG,SAASG,UAAU,IAAIC,KAAK,IAAIC,YAAY,KAC9DhF,MAAOuB,GACPqD,SAAUlD,GACVmD,OAAQlD,KACXF,IAAoB0C,EAAAC,EAAAC,cAAA,wBAK7BF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQtH,mBACpBkH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,UAAf,QACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQrH,WACpBiH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOC,GAAG,SAASG,UAAU,IAAIC,KAAK,IAAIC,YAAY,KAC1DhF,MAAO6B,GACP+C,SAAU5C,GACV6C,OAAQ5C,KACXF,IAAmBoC,EAAAC,EAAAC,cAAA,wBAIhCF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQtH,mBACpBkH,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,OAAf,OACAN,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQrH,WACxBiH,EAAAC,EAAAC,cAAA,SAAOK,KAAK,OAAOC,GAAG,MAAMG,UAAU,IAAIC,KAAK,IACtC/E,MAAOmC,GACPyC,SAAUtC,GACVuC,OAAQtC,KACXF,IAAa8B,EAAAC,EAAAC,cAAA,yBAI3BF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQpH,QACpBgH,EAAAC,EAAAC,cAAA,0BAGHlF,GAAWgF,EAAAC,EAAAC,cAACY,EAAA,EAAD,iDC5JbC,UA1DC,SAACjH,GACb,IAAMmB,EAAWC,cACX8F,EAAWC,cACXC,EAAc,IAAIC,gBAAgBH,EAASI,QAC3CC,EAAaH,EAAYI,IAAI,WAC7B1G,EAAWsG,EAAYI,IAAI,aAC3BzG,EAAOqG,EAAYI,IAAI,QACvBxG,EAAOoG,EAAYI,IAAI,QACb1G,EAAU,GAC1BK,EAASsG,IAAUC,iBATG,IAoBlBC,EApBkBtG,EAYsBC,YAAQsG,KAAgB,GAA5DpG,EAZcH,EAYdG,YAAaC,EAZCJ,EAYDI,OAAQC,EAZPL,EAYOK,KAAME,EAZbP,EAYaO,MAoCnC,OAnCAiG,oBAAU,WAENrG,EAAY+F,IAEd,CAAC/F,IAIY,YAAXC,IACAkG,EAAUzB,EAAAC,EAAAC,cAACY,EAAA,EAAD,OAGXpF,IACC+F,EAASzB,EAAAC,EAAAC,cAAA,SAAIxE,EAAMkG,UAGT,cAAXrG,GAA0BC,IAIzBiG,EACKzB,EAAAC,EAAAC,cAAC2B,EAAA,SAAD,KAEG7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAeC,QAASV,EAAYxG,KAAMA,EAAMC,KAAMA,EAAMkH,IAAKxG,EAAKwG,IAAK1C,KAAM9D,EAAK8D,OACtFU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ3H,kBACpBuH,EAAAC,EAAAC,cAAC+B,EAAD,CAAcrH,UAAWA,EAAWC,KAAMA,EAAMC,KAAMA,IAEtDkF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAatH,UAAWA,EAAWC,KAAMA,EAAMC,KAAMA,EAAMqH,aAAe,EAAMC,QAAU5G,EAAK4G,QAASC,SAAU7G,EAAK6G,cAS/HrC,EAAAC,EAAAC,cAAC2B,EAAA,SAAD,KACSJ,qCClErB,IAAAa,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,GAAAJ,EAAA,IAAAA,EAAA,KAAAK,EAAAL,EAAAE,EAAAE,GAAAE,EAAAN,EAAA,IAAAO,EAAAP,EAAAE,EAAAI,GAAAN,EAAA,IAAAA,EAAA,IAsEeQ,IA3DA,SAACjJ,GAAU,IACdkJ,EAA0ClJ,EAA1CkJ,QAAQlI,EAAkChB,EAAlCgB,KAAKD,EAA6Bf,EAA7Be,KAAKD,EAAwBd,EAAxBc,UAAUX,EAAcH,EAAdG,UACnBiB,cAEjBkE,QAAQC,IAAI2D,GACZ,IAAIC,EAAQD,EAAQE,IAAI,SAACC,EAAOC,GAC5B,IAAIC,EAAMF,EAAO,GACbG,EAAUH,EAAO,GACjBI,EAAOzI,EAAK0I,MAAM,KAClBC,EAAMF,EAAK,GAAG,IAAKA,EAAK,GAE5B,OACIf,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ+C,OAAQO,IAAKN,GAErCZ,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQuD,WAEpBnB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQwD,aACpBpB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQyD,WAAxB,QACArB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0D,aAAcL,IAE1CjB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQwD,aACpBpB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQyD,WAAxB,QACArB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0D,aAAcjJ,IAKtC2H,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQwD,aACpBpB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQyD,WAAxB,OACArB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0D,aAAcT,IAE1Cb,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQwD,aACpBpB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQyD,WAAxB,QACArB,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ0D,aAAcR,KAG9Cd,EAAAvC,EAAAC,cAAC4C,EAAA7C,EAAD,CAASpE,MAAK,GAAAkE,OAAKnF,GAALmF,OAAiBsD,GAAjBtD,OAAuBuD,GAAWS,WAAY,UAAUC,OAAQ,GAAIC,MAAO,IAAKC,cAAc,OASxH,OAEO1B,EAAAvC,EAAAC,cAACoC,EAAA,SAAD,KAESE,EAAAvC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ+D,aACpB3B,EAAAvC,EAAAC,cAAA,WAAMjG,IAETgJ,wBC9DrB1K,EAAAC,QAAA,CAAkB2L,YAAA,4BAAAhB,OAAA,uBAAAQ,UAAA,0BAAAC,YAAA,4BAAAC,UAAA,0BAAAC,YAAA","file":"static/js/5.1a0e4577.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paymentcontainer\":\"PaymentInput_paymentcontainer__2iiOz\",\"paymentheader\":\"PaymentInput_paymentheader__32j1q\",\"paycontent\":\"PaymentInput_paycontent__12Ety\",\"paygroup\":\"PaymentInput_paygroup__1R0Ap\",\"paygroupsmall\":\"PaymentInput_paygroupsmall__2-ful\",\"paygroupsmallitem\":\"PaymentInput_paygroupsmallitem__3p99o\",\"iteminput\":\"PaymentInput_iteminput__TjRLb\",\"paybtn\":\"PaymentInput_paybtn__2zDLg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paymentcontainer\":\"PayPage_paymentcontainer__2k0qa\"};","import React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"./PaymentInput.module.css\";\nimport useInput from \"../../hooks/use-input\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport useHttp from \"../../hooks/use-http\";\nimport { submitOrder } from \"../../lib/api\";\nimport { orderActions } from \"../../Store/order-slice\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst validateEmail = (input) =>{\n    return String(input)\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n    );\n};\n\nconst  validateName = (input) =>{\n    return input.trim().length >2 ;\n};\n\nconst validateCardnumer = (input) =>{\n    return String(input)\n    .match(/^(?:4[0-9]{12}(?:[0-9]{3})?)$/);\n};\n\nconst validateMonth = (input) =>{\n    return String(input)\n    .match(/^[0-1][0-9]$/);\n};\n\nconst validateYear = (input) =>{\n    return String(input)\n    .match(/^[0-9][0-9]$/);\n};\n\nconst validateCVV = (input) =>{\n    return String(input)\n    .match(/^[0-9][0-9][0-9]$/);\n};\n\n\nconst PaymentInput = (props) =>{\n    const navigate = useNavigate();\n    const movieName = useSelector((state) => state.order.movieName);\n    const selectedSeats = useSelector((state) => state.order.orderedTickets);\n    const adTicket = useSelector((state) => state.order.adTicket);\n    const conTicket = useSelector((state) => state.order.conTicket);\n    const totalPrice = useSelector((state) => state.order.totalPrice);\n    const uid = useSelector( state => state.auth.uid);\n    const { sessionId,time, date} = props;\n    let formIsValid = false;\n    let loading = false;\n    const dispatch = useDispatch();\n\n    const { sendRequest,status, data, error } = useHttp(submitOrder,false);\n\n    const {\n        value: inputEmail,\n        isValid : emailIsValid,\n        inputHasError: inputEmailHasErr,\n        inputOnchangeHandler: inputEmailOnChangeHandler,\n        inputBlurHandler: inputEmailBlurHandler,\n        inputResetHandler: restEmail\n    } = useInput(validateEmail);\n\n    const {\n        value: inputName,\n        isValid : nameIsValid,\n        inputHasError: inputNameHasErr,\n        inputOnchangeHandler: inputNameOnChangeHandler,\n        inputBlurHandler: inputNameBlurHandler,\n        inputResetHandler: restName\n    } = useInput (validateName);\n\n    const {\n        value: inputCardNo,\n        isValid : cardNoIsValid,\n        inputHasError: inputCardNoHasErr,\n        inputOnchangeHandler: inputCardNoOnChangeHandler,\n        inputBlurHandler: inputCardNoBlurHandler,\n        inputResetHandler: restCardNo\n    } = useInput(validateCardnumer);\n\n    const {\n        value: inputMonth,\n        isValid : monthIsValid,\n        inputHasError: inputMonthHasErr,\n        inputOnchangeHandler: inputMonthOnChangeHandler,\n        inputBlurHandler: inputMonthBlurHandler,\n        inputResetHandler: restMonth\n    } = useInput(validateMonth);\n\n    const {\n        value: inputYear,\n        isValid : yearIsValid,\n        inputHasError: inputYearHasErr,\n        inputOnchangeHandler: inputYearOnChangeHandler,\n        inputBlurHandler: inputYearBlurHandler,\n        inputResetHandler: restYear\n    } = useInput(validateYear );\n\n    const {\n        value: inputCVV,\n        isValid : cVVIsValid,\n        inputHasError: CVVHasErr,\n        inputOnchangeHandler: inputCVVOnChangeHandler,\n        inputBlurHandler: inputCVVBlurHandler,\n        inputResetHandler: restCVV\n    } = useInput(validateCVV );\n\n   \n    if( emailIsValid && nameIsValid && cardNoIsValid && monthIsValid && yearIsValid && cVVIsValid  ){\n        formIsValid = true;\n    }\n\n    const paySumbitHandler = async (event) =>{\n        event.preventDefault();\n        if(!formIsValid)\n         return;\n\n        const email = inputEmail;\n        console.log(movieName);\n        const orderData = {\n            name: inputName,\n            sessionId: sessionId,\n            movieName: movieName,\n            time: time,\n            date: date,\n            selectedSeats: selectedSeats,\n            adTicket: adTicket,\n            conTicket: conTicket,\n            totalPrice:totalPrice,\n        };\n        if(uid){\n            sendRequest(orderData,uid);\n        }else{\n            sendRequest(orderData);\n        }\n        \n\n    };\n\n    if(status == 'pending' ){\n      loading= true;\n    }\n   \n\n    if( status == 'completed' && data.name ){\n       \n        dispatch(orderActions.setOrderId({orderId : data.name}));\n        \n        navigate(`/ticket/${data.name}`);\n\n        loading = false;\n       \n       \n    }\n\n    return (\n        <div className={classes.paymentcontainer} onSubmit={paySumbitHandler}>\n            <div className={classes.paymentheader}>Pay Info</div>\n           <form className={classes.paycontent}>\n                <div className={classes.paygroup} >\n                    <label htmlFor=\"email\">Your Email</label>\n                    <input type=\"email\" id=\"email\"\n                            value={inputEmail}\n                            onChange={inputEmailOnChangeHandler}\n                            onBlur={inputEmailBlurHandler}\n                            ></input>\n                    {inputEmailHasErr && <p>Please enter a valid email.</p>}\n                </div>\n                <div className={classes.paygroup}>\n                    <label htmlFor=\"name\">Name on Card</label>\n                    <input type=\"text\" id=\"name\"\n                            value={inputName}\n                            onChange={inputNameOnChangeHandler}\n                            onBlur={inputNameBlurHandler}\n                            ></input>\n                    { inputNameHasErr && <p>Please enter a valid name.</p>}\n                </div>\n                <div className={classes.paygroup}>\n                    <label htmlFor=\"cardnumber\">Card Number</label>\n                    <input type=\"text\" id=\"cardnumber\"\n                            value={inputCardNo}\n                            onChange={inputCardNoOnChangeHandler}\n                            onBlur={inputCardNoBlurHandler}\n                            ></input>\n                    {inputCardNoHasErr && <p>Please enter a card no.</p> }\n                </div>\n                <div className={classes.paygroupsmall}>\n                    <div className={classes.paygroupsmallitem}>\n                        <label htmlFor=\"cardmm\">Month</label>\n                        <div className={classes.iteminput}>\n                            <input type=\"text\" id=\"cardmm\" maxLength=\"2\" size=\"2\" placeholder=\"MM\"\n                                value={inputMonth}\n                                onChange={inputMonthOnChangeHandler}\n                                onBlur={inputMonthBlurHandler}></input>\n                            {inputMonthHasErr && <p>Not valid</p>}\n\n                        </div>\n                       \n                    </div>\n                    <div className={classes.paygroupsmallitem}>\n                        <label htmlFor=\"cardyy\">Year</label>\n                        <div className={classes.iteminput}>\n                            <input type=\"text\" id=\"cardyy\" maxLength=\"2\" size=\"2\" placeholder=\"YY\"\n                                    value={inputYear}\n                                    onChange={inputYearOnChangeHandler}\n                                    onBlur={inputYearBlurHandler} ></input>\n                                {inputYearHasErr && <p>Not valid</p>}\n                        </div>\n                       \n                    </div>\n                    <div className={classes.paygroupsmallitem}>\n                        <label htmlFor=\"cvv\">CVV</label>\n                        <div className={classes.iteminput}>\n                        <input type=\"text\" id=\"cvv\" maxLength=\"3\" size=\"3\"\n                                 value={inputCVV}\n                                 onChange={inputCVVOnChangeHandler}\n                                 onBlur={inputCVVBlurHandler}></input>\n                             {CVVHasErr && <p>Not valid</p>}\n                        </div>\n                    </div>              \n                </div>\n                <div className={classes.paybtn} >\n                    <button >PAY NOW</button>\n                  \n                </div>\n                {loading && <LoadingSpinner/>}\n           </form>\n           \n           \n        </div>\n    )\n}\n\nexport default PaymentInput;","import React,{ Fragment, useEffect, useState} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport TicketOrder from \"../components/Ticket/TicketOrder\";\nimport SessionDeatil from \"../components/Order/SessionDetail\";\nimport PaymentInput from \"../components/Order/PaymentInput\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport classes from \"./PayPage.module.css\";\nimport { getMovieDetail } from \"../lib/api\";\nimport useHttp from \"../hooks/use-http\";\nimport Ticket from \"../components/Ticket/Ticket\";\nimport TimeCountDown from \"../components/UI/TimeCountDown\";\nimport { uiActions } from \"../Store/ui-slice\";\n\n\n\nconst PayPage = (props) =>{\n    const dispatch = useDispatch();\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const movieIndex = queryParams.get('movieId');\n    const sessionId= queryParams.get('sessionId');\n    const time = queryParams.get('time');\n    const date = queryParams.get('date');\n    const movieId = sessionId[0];\n    dispatch(uiActions.startpayStage());\n    \n\n    const { sendRequest, status, data, error }= useHttp(getMovieDetail, true);\n    useEffect(()=>{\n       \n        sendRequest(movieIndex);\n      \n    },[sendRequest]);\n \n\n    let payPage;\n    if( status === 'pending'){\n        payPage = <LoadingSpinner/>\n    };\n\n    if(error){\n        payPage =<p>{error.message}</p>\n    };\n\n    if(status === 'completed' && data){\n\n\n      \n        payPage = \n            (<Fragment>\n              \n                <SessionDeatil movieId={movieIndex} time={time} date={date} img={data.img} name={data.name}/>\n                <div className={classes.paymentcontainer}>\n                    <PaymentInput sessionId={sessionId} time={time} date={date}/>\n            \n                    <TicketOrder sessionId={sessionId} time={time} date={date} paymentPage = {true} adprice= {data.adprice} conprice={data.conprice}/>\n\n                </div>\n                      \n            </Fragment>)\n    };\n\n\n    return(\n            <Fragment>\n                    {payPage}\n                   \n                \n            </Fragment>\n\n    )\n};\n\nexport default PayPage;","import React from 'react';\nimport { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Ticket.module.css\";\nimport Barcode from \"react-barcode\";\nimport { BiX } from \"react-icons/bi\";\nimport { uiActions } from \"../../Store/ui-slice\";\nimport { orderActions } from \"../../Store/order-slice\";\n\n\nconst Ticket = (props) => {\n    const { tickets,date,time,sessionId,movieName } = props;\n    const dispatch = useDispatch();\n  \n    console.log(tickets);\n    let items = tickets.map((ticket,index) => {\n        let row = ticket[0];\n        let seatNum = ticket[1];\n        let days = date.split(\"-\");\n        let day = days[1]+\"/\" +days[2];\n\n        return ticket = (\n            <div className={classes.ticket} key={index}>\n\n            <div className={classes.ticketrow}>\n        \n                <div className={classes.ticketsmall}>\n                    <div className={classes.tickettag}>Date</div>\n                    <div className={classes.ticketvalue}>{day}</div>\n                </div>\n                <div className={classes.ticketsmall}>\n                    <div className={classes.tickettag}>Time</div>\n                    <div className={classes.ticketvalue}>{time}</div>\n                </div>\n            \n    \n              \n                    <div className={classes.ticketsmall}>\n                        <div className={classes.tickettag}>ROW</div>\n                        <div className={classes.ticketvalue}>{row}</div>\n                    </div>\n                    <div className={classes.ticketsmall}>\n                        <div className={classes.tickettag}>SEAT</div>\n                        <div className={classes.ticketvalue}>{seatNum}</div>\n                    </div>\n                </div>   \n                <Barcode value={`${sessionId}${row}${seatNum}`} background= \"#fffce3\" height={50} width={1.5} displayValue={false}/>\n              \n            </div>\n\n        )\n    })\n \n\n    \n    return (\n       \n           <Fragment>\n                   \n                    <div className={classes.tickettitle}>\n                        <div>{movieName}</div>\n                    </div>\n                    {items}\n            </Fragment>        \n          \n\n    )\n}\n\nexport default Ticket;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tickettitle\":\"Ticket_tickettitle__1i3eL\",\"ticket\":\"Ticket_ticket__2dMvq\",\"ticketrow\":\"Ticket_ticketrow__kAA_E\",\"ticketsmall\":\"Ticket_ticketsmall__2T0-3\",\"tickettag\":\"Ticket_tickettag__1wRKi\",\"ticketvalue\":\"Ticket_ticketvalue__3_6W6\"};"],"sourceRoot":""}