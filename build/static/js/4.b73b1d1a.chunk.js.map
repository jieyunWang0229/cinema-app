{"version":3,"sources":["components/movies/MovieDetail.module.css","components/movies/SessionTimeList.module.css","components/movies/SessionTime.module.css","components/movies/MovieDescription.module.css","components/movies/MovieDetail.js","components/movies/SessionTime.js","components/movies/SessionTimeList.js","components/movies/MovieDescription.js","pages/MovieDetailPage.js"],"names":["module","exports","mdcontainer","mdpicture","mdinfo","mdheader","mdtags","mdtag","mdicon","timelistcontainer","timelistheader","timelist","sessiontime","descriptioncontainer","desbackgroundimg","desshort","deslong","destag","MovieDetail","props","react_default","a","createElement","className","classes","src","img","name","index_esm","category","duration","SessionTime","id","movieIndex","movieId","console","log","dispatch","useDispatch","react_router_dom","to","concat","time","date","onClick","selectedSeatsActions","refreshSelectedSeat","SessionTimeList","sessionTimeData","sessions","sessionList","sessionData","forEach","data","map","session","index","movies_SessionTime","key","MovieDescription","releasedate","director","cast","description","MovieDetailPage","useParams","content","_useState","useState","_useState2","Object","slicedToArray","selectDate","setSelectDate","_useHttp","useHttp","getMovieDetail","sendRequest","status","movie","error","useEffect","LoadingSpinner","react","movies_MovieDetail","SessionDateList","sessionDate","movies_SessionTimeList","movies_MovieDescription"],"mappings":"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","file":"static/js/4.b73b1d1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mdcontainer\":\"MovieDetail_mdcontainer__oQWSu\",\"mdpicture\":\"MovieDetail_mdpicture__1ttUh\",\"mdinfo\":\"MovieDetail_mdinfo__11fuY\",\"mdheader\":\"MovieDetail_mdheader__3aUAR\",\"mdtags\":\"MovieDetail_mdtags__3PGJs\",\"mdtag\":\"MovieDetail_mdtag__11-Li\",\"mdicon\":\"MovieDetail_mdicon__24Ksp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timelistcontainer\":\"SessionTimeList_timelistcontainer__1GYTl\",\"timelistheader\":\"SessionTimeList_timelistheader__2DSGh\",\"timelist\":\"SessionTimeList_timelist__3QVrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sessiontime\":\"SessionTime_sessiontime__1huWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptioncontainer\":\"MovieDescription_descriptioncontainer__2Shwt\",\"desbackgroundimg\":\"MovieDescription_desbackgroundimg__3X4wA\",\"desshort\":\"MovieDescription_desshort__iNgi0\",\"deslong\":\"MovieDescription_deslong__171A2\",\"destag\":\"MovieDescription_destag__3qZep\"};","import React from 'react';\nimport classes from './MovieDetail.module.css';\nimport DateInput from '../UI/DateInput';\nimport { TiFilm, TiStopwatch } from 'react-icons/ti';\n\n\nconst MovieDetail = (props) =>{\n\n    return (\n        <div className={classes.mdcontainer}>\n           \n                <div className={classes.mdpicture}>\n                    <img src={props.img}></img>\n                </div>\n                <div className={classes.mdinfo}>\n                    <div className={classes.mdheader}>\n                    \n                        {props.name}\n                    </div>\n                    <div className={classes.mdtags}>\n                        <div  className={classes.mdtag}>\n                            <TiFilm className={classes.mdicon}/>\n                          <span>{props.category}</span>\n                        </div>\n                        <div  className={classes.mdtag}> \n                            <TiStopwatch className={classes.mdicon}/>\n                          <span>{props.duration}</span>\n                        </div>\n                    </div>\n\n\n                 </div>\n            \n         \n\n\n        </div>\n\n    )\n}\n\nexport default MovieDetail;","import React from 'react';                                                                                                   import { Link } from 'react-router-dom';\nimport classes from './SessionTime.module.css';\nimport { useDispatch } from 'react-redux';\nimport { selectedSeatsActions } from '../../Store/selectedseats-slice';\n\nconst SessionTime =(props) =>{\n    const id = props.id;\n    const movieId = props.movieId;\n    const movieIndex = props.movieIndex;\n    console.log(movieIndex);\n    const dispatch = useDispatch();\n    const onClickHandler =() =>{\n        dispatch(selectedSeatsActions.refreshSelectedSeat());\n    }\n\n    return (\n        <div className={classes.sessiontime}>\n            <Link to={`/bookingticke?movieIndex=${movieIndex}&sessionId=${id}&time=${props.time}&date=${props.date}`} onClick={onClickHandler}>{props.time}</Link>\n        </div>\n        \n    )\n}\n\nexport default SessionTime;","import React, { useState, useEffect } from \"react\";\nimport classes from \"./SessionTimeList.module.css\";\nimport SessionTime from \"./SessionTime\";\n\nconst SessionTimeList = (props)=>{\n    const { date,sessionData } = props;\n \n    let sessionTimeData;\n    let sessions;\n    let sessionList;\n    if( date ){\n       sessionData.forEach(data =>{\n            if( date == data.date){\n                return sessionTimeData=data;\n            };\n        })\n    };\n  \n    if( sessionTimeData) {\n        sessions = sessionTimeData.sessions? sessionTimeData.sessions:null ;\n    \n    };\n    if(sessions){\n\n        sessionList = sessions.map((session,index) =>{\n             return ( <SessionTime key={index} time={session.time} id={session.id} movieId={props.movieId} movieIndex={props.movieIndex} date={date}/>)\n        })\n    }\n\n\n\n\n\n    return (\n        <div className={classes.timelistcontainer}>\n            <div className={classes.timelistheader} >\n                Session Time:\n            </div>\n            <div className={classes.timelist}>\n                 {sessionList}\n            </div>\n          \n        </div>\n\n    )\n}\n\nexport default SessionTimeList;","\nimport React from 'react';\nimport classes from './MovieDescription.module.css';\n\nconst MovieDescription = (props) =>{\n    return (\n        <div className={classes.descriptioncontainer} >\n             <div className={classes.desbackgroundimg}>\n                <img src={props.img}/>\n            </div>\n           \n            <div className={classes.desshort}>\n                <span className={classes.destag}>Release Date:  </span>\n                <span>{props.releasedate}</span>\n\n            </div>\n            <div  className={classes.desshort}>\n                <span className={classes.destag}>Director:  </span>\n                <span>{props.director}</span>\n            </div>\n            <div  className={classes.desshort}>\n                <span className={classes.destag}>MainCast:  </span>\n                <span>{props.cast}</span>\n            </div>\n\n            <div  className={classes.deslong}>\n                <p>\n                    {props.description}\n                </p>\n            \n            </div>\n        </div>\n    )\n}\n\nexport default MovieDescription;","import React, { Fragment,useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieDetail from \"../components/movies/MovieDetail\";\nimport SessionDateList from \"../components/movies/SessionDateList\";\nimport SessionTimeList from \"../components/movies/SessionTimeList\";\nimport MovieDescription from \"../components/movies/MovieDescription\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getMovieDetail } from \"../lib/api\";\n\n\nconst MovieDetailPage =(props) =>{\n    const params = useParams();\n    const { movieId } = params;\n    console.log( movieId);\n    const [selectDate, setSelectDate] = useState(null);\n    const { sendRequest, status, data:movie, error } = useHttp(getMovieDetail, true);\n    useEffect(()=>{\n        sendRequest(movieId);\n    },[sendRequest]);\n\n    let content;\n\n    const selectDateHandler =(date)=>{\n        setSelectDate(date);\n    };\n    \n    if(error){\n        content= <p>{error}</p>\n    }\n    if(status === 'pending'){\n        content = <LoadingSpinner/>\n    }\n    if( status === 'completed' && movie){\n        \n        content = <Fragment>\n                    <MovieDetail img={movie.img} name={movie.name} category={movie.category} duration={movie.duration}/>\n                    \n                    <SessionDateList selectDate={selectDateHandler} sessionDate={movie.date}/>\n                    <SessionTimeList date={selectDate? selectDate : movie.date[0]} sessionData={movie.sessions} movieIndex={movieId} movieId={movie.id}/>\n                    <MovieDescription \n                                    img={movie.img}\n                                    releasedate={movie.releasedate}\n                                    director={movie.director}\n                                    cast={movie.cast}\n                                    description={movie.description}\n                    />\n                   </Fragment>\n\n    }\n  \n\n \n\n   \n    return (\n        <Fragment>\n              {content}\n        </Fragment>\n        \n           \n\n       \n       \n    )\n}\n\nexport default MovieDetailPage;\n"],"sourceRoot":""}