{"version":3,"sources":["components/cinema/CinemaDisplay.module.css","components/cinema/Seat.module.css","components/cinema/Seats.module.css","components/cinema/TicketNumberInput.module.css","pages/BookingTicketPage.module.css","components/cinema/Seat.js","components/cinema/Seats.js","components/cinema/CinemaDisplay.js","components/cinema/TicketNumberInput.js","pages/BoookingTicketPage.js"],"names":["module","exports","display","displayheader","dark","screen","legends","legend","seat","reserved","selected","close","seatsarea","seatsrow","tknocontainer","tknoheader","tknoinput","tktag","inputgroup","tknobutton","tknodisplay","bkcontainer","Seat","props","isReserved","row","no","id","dispatch","useDispatch","tickesNumber","useSelector","state","selectedseats","selectedSeatsIndex","_useState","useState","_useState2","Object","slicedToArray","isSelected","setIsSelected","seatNo","concat","useEffect","selectedSeatsActions","cancelSelected","find","index","react_default","a","createElement","className","classes","onClick","event","pre","selectedSeats","target","innerText","Seats","seats","seatsData","map","seatrow","rowNo","String","fromCharCode","charCodeAt","key","cinema_Seat","number","selectedSeatsQuantity","length","document","getElementById","classList","remove","cancelFirstSelected","CinemaDisplay","reload","ui","seatsreload","movieId","sessionId","_useHttp","useHttp","getSession","sendRequest","status","data","error","uiActions","seatsReloadClear","timer","setInterval","console","log","clearInterval","cinema_Seats","TickeNumberInput","normalTicket","concessionTicket","decreasenormalTicket","increasenormalTicket","decreaseconcessionTicket","increaseconcessionTicket","BookingTicketPage","startBookingStage","bookingPage","getMovieDetail","location","useLocation","queryParams","URLSearchParams","search","movieIndex","get","time","date","LoadingSpinner","message","react","SessionDetail","img","name","TicketNumberInput","cinema_CinemaDisplay","TicketOrder","adprice","conprice","movieName"],"mappings":"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","file":"static/js/3.64ada8f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"CinemaDisplay_display__16u3t\",\"displayheader\":\"CinemaDisplay_displayheader__2l5QW\",\"dark\":\"CinemaDisplay_dark__1IlzE\",\"screen\":\"CinemaDisplay_screen__LBQ-4\",\"legends\":\"CinemaDisplay_legends__3wMnB\",\"legend\":\"CinemaDisplay_legend__2FZJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seat\":\"Seat_seat__1-0DQ\",\"reserved\":\"Seat_reserved__20wwh\",\"selected\":\"Seat_selected__tENDK\",\"close\":\"Seat_close__1JB4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"seatsarea\":\"Seats_seatsarea__2_Ldo\",\"seatsrow\":\"Seats_seatsrow__162Wr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tknocontainer\":\"TicketNumberInput_tknocontainer__1PaB1\",\"tknoheader\":\"TicketNumberInput_tknoheader__1qKMO\",\"tknoinput\":\"TicketNumberInput_tknoinput__1ZA7q\",\"tktag\":\"TicketNumberInput_tktag__1z8H3\",\"inputgroup\":\"TicketNumberInput_inputgroup__dHtGj\",\"tknobutton\":\"TicketNumberInput_tknobutton__PeDoF\",\"tknodisplay\":\"TicketNumberInput_tknodisplay__1DbuZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bkcontainer\":\"BookingTicketPage_bkcontainer__byvnc\"};","import React, {useEffect, useState} from \"react\";\nimport classes from \"./Seat.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedSeatsActions } from '../../Store/selectedseats-slice';\n\n\nconst Seat = (props) => {\n    const { isReserved, row, no, id } = props;\n    const dispatch = useDispatch();\n\n    const tickesNumber = useSelector((state) => state.selectedseats.tickesNumber);\n    const selectedSeatsIndex = useSelector((state) => state.selectedseats.selectedSeatsIndex);\n    const [isSelected, setIsSelected] = useState(false);\n\n    const seatNo = `${row}${no}`;\n    \n    const seatOnClickHandler =(event)=>{\n        if(tickesNumber ==0 ){\n            return\n        }\n        \n      \n        if( props.isReserved==false && isSelected == false){\n          \n            setIsSelected(pre => !pre);\n            dispatch(selectedSeatsActions.selectedSeats({id: id, seatNo: event.target.innerText})); \n        };\n        if(  props.isReserved==false && isSelected == true){\n            setIsSelected(pre => !pre);\n            dispatch(selectedSeatsActions.cancelSelected({id: id, seatNo: event.target.innerText}));\n        };\n       \n           \n    } ;\n    useEffect (() =>{\n        if(isReserved){\n            dispatch(selectedSeatsActions.cancelSelected({id: id, seatNo: seatNo}));\n        }\n    },[isReserved]);\n\n    useEffect(()=>{\n        const selected = selectedSeatsIndex.find(index => index == props.id);\n        if(selected){\n            setIsSelected(true);\n        }\n        if(!selected){\n            setIsSelected(false);\n        }\n       \n    },[selectedSeatsIndex]);\n   \n  \n    return (\n        <div \n            className={`${classes.seat} \n                        ${isReserved== true ? classes.reserved : ''} \n                        ${isSelected== true  ? classes.selected : ''} \n                        ${props.selected? classes.selected : ''} \n                        ${tickesNumber == 0 ? classes.close : ''}`}\n            onClick={seatOnClickHandler}\n            id={id}>\n            {row}\n            {no}\n        </div>\n    )\n\n}\n\nexport default Seat;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch,useSelector } from \"react-redux\";\nimport Seat from \"./Seat\";\nimport classes from './Seats.module.css';\nimport { selectedSeatsActions } from '../../Store/selectedseats-slice';\n\n/*const  seatsData= [\n    [{id: 1, number: 1,isReserved: false}, {id: 2, number: 2,isReserved: false}, {id: 3, number: '3', isReserved: false }, {id: 4, number: '4',isReserved: true}, {id: 5, number: 5,isReserved: true}, {id: 6, number: 6,isReserved: false}],\n    [{id: 7, number: 1, isReserved: false}, {id: 8, number: 2, isReserved: false},{id: 9, number: '3', isReserved: false }, {id: 10, number: '4',isReserved: true}, {id: 11, number: 5,isReserved: true}, {id: 12, number: 6,isReserved: false}],\n    [{id: 13, number: 1, isReserved: false}, {id: 14, number: 2, isReserved: false}, {id: 15, number: 3, isReserved: false}, {id: 16, number: '4', isReserved: true},  {id: 17, number: 5, isReserved: true}, {id: 18, number: 6, isReserved: false}],\n    [{id: 19, number: 1,isReserved: false}, {id: 20, number: 2,isReserved: false}, {id: 21, number: 3,isReserved: false }, {id: 22, number: '4',isReserved: true}, {id: 23, number: 5,isReserved: true}, {id: 24, number: 6,isReserved: false}],\n    [{id: 25, number: 1, isReserved: false}, {id: 26, number: 2,isReserved: false}, {id: 27, number: '3', isReserved: false}, {id: 28, number: '4',isReserved: true},{id: 29, number: 5,isReserved: true}, {id: 30, number: 6, isReserved: false}]\n]\n*/ \n\nconst Seats =(props) =>{\n    const { seatsData } =props;\n    let seats;\n    const dispatch = useDispatch();\n   \n    const tickesNumber = useSelector((state) => state.selectedseats.tickesNumber);\n    const selectedSeatsIndex = useSelector((state) => state.selectedseats.selectedSeatsIndex);\n    if(seatsData){\n    \n           seats = seatsData.map( (seatrow,index) =>{\n                const rowNo = String.fromCharCode(index + 'A'.charCodeAt(0));\n\n                return(\n                    <div  className={classes.seatsrow} key={rowNo}>\n                        {seatrow.map(seat => {\n                        return <Seat\n                                    key = {seat.id}\n                                    id = {seat.id}\n                                    row={rowNo}\n                                    no={seat.number}\n                                    isReserved ={seat.isReserved}    \n                                    />    \n                        })}\n                    </div>\n                )\n            });\n    }\n\n\n    useEffect(()=>{\n        const selectedSeatsQuantity = selectedSeatsIndex.length;\n        const id=selectedSeatsIndex[0];\n        if(tickesNumber<selectedSeatsQuantity ){\n            const seat = document.getElementById(id);\n            seat.classList.remove('Seat_selected__FPj0G');\n            dispatch(selectedSeatsActions.cancelFirstSelected());\n    \n\n        }\n    },[tickesNumber,selectedSeatsIndex,dispatch])\n\n   \n\n    return (\n        <div className={classes.seatsarea}>\n            {seats}\n        </div>\n\n    )\n\n}\n export default Seats;","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classes from \"./CinemaDisplay.module.css\";\nimport Seats from \"./Seats\";\nimport Seat from \"./Seat\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getSession } from \"../../lib/api\";\nimport { render } from \"react-dom\";\nimport { uiActions } from \"../../Store/ui-slice\";\n\n\n\nconst  CinemaDisplay =(props) =>{\n    const tickesNumber = useSelector((state) => state.selectedseats.tickesNumber);\n    const reload = useSelector((state)=> state.ui.seatsreload);\n    const dispatch = useDispatch();\n    const { movieId, sessionId } =props;\n    const { sendRequest, status, data, error } = useHttp(getSession, true);\n    useEffect(() =>{\n        if(reload == true){\n            sendRequest(movieId, sessionId);\n            dispatch (uiActions.seatsReloadClear());\n        }\n       \n    },[reload, sendRequest, movieId, sessionId ])\n      \n    \n\n    useEffect(()=>{\n        \n            sendRequest(movieId, sessionId);\n           \n            const  timer = setInterval(() =>{\n                sendRequest(movieId, sessionId);\n                console.log(\"update\");\n            }, 50000);\n        \n       \n            return (\n                    ()=>{\n                            clearInterval(timer);\n                        }\n        )\n    },[sendRequest, movieId, sessionId]);\n    let seats;\n\n    if(status === 'completed' && data){\n        seats = data;\n    }\n    \n  \n  \n    return(\n        <div className={classes.display}>\n            <div className={`${classes.displayheader} ${tickesNumber == 0 ? classes.dark :''}`}>Select Seats</div>\n            \n            <div className={`${classes.screen} ${tickesNumber == 0 ? classes.dark :''}`}></div>\n            <Seats sessionId={props.sessionId} movieId={props.movieId} seatsData ={seats}/>\n            <div className={classes.legends}>\n                <div className={classes.legend}>\n                    <Seat selected={true}/>\n                    <span>Selected</span>\n                </div>\n                <div className={classes.legend}>\n                     <Seat/>\n                    <span>Available</span>\n                </div>\n                <div className={classes.legend} >\n                    <Seat isReserved={true}/>\n                    <span>Taken</span>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default CinemaDisplay;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedSeatsActions }from \"../../Store/selectedseats-slice\";\nimport classes from \"./TicketNumberInput.module.css\";\n\nconst TickeNumberInput = (props) =>{\n    const dispatch = useDispatch();\n    const normalTicket = useSelector((state) => state.selectedseats.normalTicket);\n    const concessionTicket = useSelector((state) => state.selectedseats.concessionTicket);\n  \n    const decrementnormalTicketHandler =()=>{        \n       if(normalTicket > 0 ){\n         dispatch(selectedSeatsActions.decreasenormalTicket());\n       }\n    }\n\n    const incrementnormalTicketHandler =() =>{\n        dispatch(selectedSeatsActions.increasenormalTicket());\n    }\n\n    const decrementconcessionTicketHandler =()=>{        \n        if(concessionTicket > 0 ){\n          dispatch(selectedSeatsActions.decreaseconcessionTicket());\n        }\n     }\n \n     const incrementconcessionTicketHandler =() =>{\n         dispatch(selectedSeatsActions.increaseconcessionTicket());\n     }\n\n\n    return (\n        <div className={classes.tknocontainer}>\n            <div className={classes.tknoheader}> Select Tickets</div>\n            <div className={classes.tknoinput}>\n                <div className={classes.tktag}>Adult:</div>\n                <div className={classes.inputgroup}>\n                    <div className={classes.tknobutton}>\n                        <button onClick={decrementnormalTicketHandler}>-</button>\n                    </div>\n                    <div className={classes.tknodisplay}>\n                        {normalTicket}\n                    </div>\n                    <div className={classes.tknobutton}>\n                        <button onClick={incrementnormalTicketHandler}>+</button>\n                    </div>\n\n                </div>\n                \n            </div>\n            <div className={classes.tknoinput}>\n                <div className={classes.tktag}>Concession:</div>\n                <div className={classes.inputgroup}>\n                    <div className={classes.tknobutton}>\n                        <button onClick={decrementconcessionTicketHandler}>-</button>\n                    </div>\n                    <div className={classes.tknodisplay}>\n                        {concessionTicket}\n                    </div>\n                    <div className={classes.tknobutton}>\n                        <button onClick={incrementconcessionTicketHandler}>+</button>\n                    </div>\n\n                </div>\n               \n            </div>\n           \n        </div>\n    )\n\n}\n\nexport default TickeNumberInput;","import React,{ Fragment,useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../Store/ui-slice\";\nimport CinemaDisplay from \"../components/cinema/CinemaDisplay\";\nimport TickeNumberInput from \"../components/cinema/TicketNumberInput\";\nimport TicketOrder from \"../components/Ticket/TicketOrder\";\nimport SessionDeatil from \"../components/Order/SessionDetail\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport classes from './BookingTicketPage.module.css';\nimport { getMovieDetail } from \"../lib/api\";\nimport useHttp from \"../hooks/use-http\";\n\n\n\nconst BookingTicketPage =(props)=>{\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        dispatch(uiActions.startBookingStage());\n    },[]);\n    const { sendRequest, status, data, error }= useHttp(getMovieDetail, true);\n   \n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const movieIndex = queryParams.get('movieIndex');\n    const sessionId= queryParams.get('sessionId');\n    const time = queryParams.get('time');\n    const date = queryParams.get('date');\n    const movieId = sessionId[0];\n    useEffect(()=>{\n        sendRequest(movieIndex);\n    },[sendRequest]);\n    let bookingPage;\n    if( status === 'pending'){\n        bookingPage = <LoadingSpinner/>\n    };\n\n    if(error){\n        bookingPage =<p>{error.message}</p>\n    };\n\n    if(status === 'completed' && data){\n        bookingPage = \n            (<Fragment>\n                        <SessionDeatil movieId={movieIndex} time={time} date={date} img={data.img} name={data.name}/>\n\n                        <div className={classes.bkcontainer}>\n\n                            <TickeNumberInput/>\n                            <CinemaDisplay sessionId={sessionId} movieId={movieId}/>\n                            <TicketOrder movieIndex = {movieIndex} sessionId={sessionId} time={time} date={date} adprice= {data.adprice} conprice={data.conprice} movieName= {data.name}/>\n\n                        </div>\n            </Fragment>)\n    };\n   \n    return (\n        <Fragment>      \n            {bookingPage }\n        </Fragment>\n\n        \n\n       \n\n    )\n}\n\nexport default BookingTicketPage;"],"sourceRoot":""}